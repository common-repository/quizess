// Responsive-deep

// Mixin creates output for specific key in a map that is nested multiple times, with provided media breakpoints.
// Selectors must be valid html selectors.

// $map - Map to search.
// $key - Map key to find.


// Map:
// $map: (
//   test2: (
//     test1: (
//        mobile: (
//          font-size: 64px,
//          line-height: 0.92,
//        ),
//        tablet: (
//          font-size: 42px,
//          line-height: 1.12,
//        ),
//     ),
//   ),
// );

// Markup:
// .test {
//   @include responsive($test, test2, test1);
// }

// Output:
// .test {
//   font-size: 64px;
//   line-height: 0.92;
// }
// @media (min-width: 768px) {
//   .test {
//     font-size: 42px;
//     line-height: 1.12;
//   }
// }

@mixin responsive-deep($map, $key...) {
  $i: 0;

  @each $breakpoint, $breakpointMap in map-get-deep($map, $key...) {
    @if (type-of($breakpointMap) == 'map') {
      @if $i == 0 {
        @each $cssSelector, $cssValue in $breakpointMap {
          #{$cssSelector}: $cssValue;
        }
      }

      @else {
        @include media(#{$breakpoint} up) {
          /* stylelint-disable max-nesting-depth */
          @each $cssSelector, $cssValue in $breakpointMap {
            #{$cssSelector}: $cssValue;
          }
        }
      }
    }

    @else {
      @error 'ERROR: Responsive Map breakpointMap items are not map please check: #{$map} with key: #{breakpointMap}';
    }
    $i: $i + 1;
  }
}